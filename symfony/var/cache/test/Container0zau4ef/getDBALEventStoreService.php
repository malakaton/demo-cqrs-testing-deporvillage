<?php

namespace Container0zau4ef;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDBALEventStoreService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'Broadway\EventStore\Dbal\DBALEventStore' shared autowired service.
     *
     * @return \Broadway\EventStore\Dbal\DBALEventStore
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/broadway/broadway/src/Broadway/EventStore/EventStore.php';
        include_once \dirname(__DIR__, 4).'/vendor/broadway/broadway/src/Broadway/EventStore/Management/EventStoreManagement.php';
        include_once \dirname(__DIR__, 4).'/vendor/broadway/event-store-dbal/src/DBALEventStore.php';
        include_once \dirname(__DIR__, 4).'/vendor/broadway/broadway/src/Broadway/Serializer/Serializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/broadway/broadway/src/Broadway/Serializer/SimpleInterfaceSerializer.php';
        include_once \dirname(__DIR__, 4).'/vendor/broadway/uuid-generator/src/Broadway/UuidGenerator/Converter/BinaryUuidConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/broadway/uuid-generator/src/Broadway/UuidGenerator/Converter/BinaryUuidConverter.php';

        $a = ($container->services['broadway.serializer.metadata'] ?? ($container->services['broadway.serializer.metadata'] = new \Broadway\Serializer\SimpleInterfaceSerializer()));

        return $container->services['Broadway\\EventStore\\Dbal\\DBALEventStore'] = new \Broadway\EventStore\Dbal\DBALEventStore(($container->services['doctrine_mongodb.odm.default_connection'] ?? $container->load('getDoctrineMongodb_Odm_DefaultConnectionService')), $a, $a, 'events', true, ($container->privates['broadway.uuid.converter'] ?? ($container->privates['broadway.uuid.converter'] = new \Broadway\UuidGenerator\Converter\BinaryUuidConverter())));
    }
}
