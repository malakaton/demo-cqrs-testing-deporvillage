<?php

namespace Container0zau4ef;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTest_PrivateServicesLocatorService extends App_KernelTestDebugContainer
{
    /**
     * Gets the public 'test.private_services_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\ReturnOrder\\Domain\\Strategy\\CarrierReturnCodeStrategy' => ['privates', 'App\\ReturnOrder\\Domain\\Strategy\\CarrierReturnCodeStrategy', 'getCarrierReturnCodeStrategyService', true],
            'App\\ReturnOrder\\Infrastructure\\Persistence\\Repository\\MongoReturnOrderRepository' => ['privates', 'App\\ReturnOrder\\Infrastructure\\Persistence\\Repository\\MongoReturnOrderRepository', 'getMongoReturnOrderRepositoryService', true],
            'App\\Shared\\Infrastructure\\Bus\\Command\\MessengerCommandBus' => ['privates', 'App\\Shared\\Infrastructure\\Bus\\Command\\MessengerCommandBus', 'getMessengerCommandBusService', true],
            'App\\Shared\\Infrastructure\\Bus\\Query\\MessengerQueryBus' => ['privates', 'App\\Shared\\Infrastructure\\Bus\\Query\\MessengerQueryBus', 'getMessengerQueryBusService', true],
            'App\\Shared\\Infrastructure\\Symfony\\Exception\\ApiExceptionListener' => ['privates', 'App\\Shared\\Infrastructure\\Symfony\\Exception\\ApiExceptionListener', 'getApiExceptionListenerService', true],
            'App\\Tests\\Functional\\Contexts\\FixturesLoader' => ['privates', 'App\\Tests\\Functional\\Contexts\\FixturesLoader', 'getFixturesLoaderService', true],
            'controller_resolver' => ['privates', 'controller_resolver', 'getControllerResolverService', false],
            'argument_metadata_factory' => ['privates', 'argument_metadata_factory', 'getArgumentMetadataFactoryService', false],
            'argument_resolver' => ['privates', 'argument_resolver', 'getArgumentResolverService', false],
            'argument_resolver.request_attribute' => ['privates', 'argument_resolver.request_attribute', 'getArgumentResolver_RequestAttributeService', true],
            'argument_resolver.request' => ['privates', 'argument_resolver.request', 'getArgumentResolver_RequestService', true],
            'argument_resolver.session' => ['privates', 'argument_resolver.session', 'getArgumentResolver_SessionService', true],
            'argument_resolver.service' => ['privates', 'argument_resolver.service', 'getArgumentResolver_ServiceService', true],
            'argument_resolver.default' => ['privates', 'argument_resolver.default', 'getArgumentResolver_DefaultService', true],
            'argument_resolver.variadic' => ['privates', 'argument_resolver.variadic', 'getArgumentResolver_VariadicService', true],
            'response_listener' => ['privates', 'response_listener', 'getResponseListenerService', false],
            'streamed_response_listener' => ['privates', 'streamed_response_listener', 'getStreamedResponseListenerService', false],
            'locale_listener' => ['privates', 'locale_listener', 'getLocaleListenerService', false],
            'validate_request_listener' => ['privates', 'validate_request_listener', 'getValidateRequestListenerService', false],
            'disallow_search_engine_index_response_listener' => ['privates', 'disallow_search_engine_index_response_listener', 'getDisallowSearchEngineIndexResponseListenerService', false],
            'exception_listener' => ['privates', 'exception_listener', 'getExceptionListenerService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'cache_clearer' => ['services', '.container.private.cache_clearer', 'get_Container_Private_CacheClearerService', true],
            'filesystem' => ['services', '.container.private.filesystem', 'get_Container_Private_FilesystemService', true],
            'file_locator' => ['privates', 'file_locator', 'getFileLocatorService', true],
            'config_cache_factory' => ['privates', 'config_cache_factory', 'getConfigCacheFactoryService', false],
            'dependency_injection.config.container_parameters_resource_checker' => ['privates', 'dependency_injection.config.container_parameters_resource_checker', 'getDependencyInjection_Config_ContainerParametersResourceCheckerService', true],
            'config.resource.self_checking_resource_checker' => ['privates', 'config.resource.self_checking_resource_checker', 'getConfig_Resource_SelfCheckingResourceCheckerService', true],
            'locale_aware_listener' => ['privates', 'locale_aware_listener', 'getLocaleAwareListenerService', false],
            'container.env_var_processor' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', true],
            'slugger' => ['privates', 'slugger', 'getSluggerService', true],
            'container.getenv' => ['privates', 'container.getenv', 'getContainer_GetenvService', true],
            'config_builder.warmer' => ['privates', 'config_builder.warmer', 'getConfigBuilder_WarmerService', true],
            'error_handler.error_renderer.html' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'console.error_listener' => ['privates', 'console.error_listener', 'getConsole_ErrorListenerService', true],
            'console.suggest_missing_package_subscriber' => ['privates', 'console.suggest_missing_package_subscriber', 'getConsole_SuggestMissingPackageSubscriberService', true],
            'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService', true],
            'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService', true],
            'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService', true],
            'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService', true],
            'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService', true],
            'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService', true],
            'console.command.cache_pool_list' => ['privates', 'console.command.cache_pool_list', 'getConsole_Command_CachePoolListService', true],
            'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService', true],
            'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService', true],
            'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService', true],
            'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService', true],
            'console.command.container_lint' => ['privates', 'console.command.container_lint', 'getConsole_Command_ContainerLintService', true],
            'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService', true],
            'console.command.dotenv_debug' => ['privates', 'console.command.dotenv_debug', 'getConsole_Command_DotenvDebugService', true],
            'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService', true],
            'console.command.messenger_consume_messages' => ['privates', 'console.command.messenger_consume_messages', 'getConsole_Command_MessengerConsumeMessagesService', true],
            'console.command.messenger_setup_transports' => ['privates', 'console.command.messenger_setup_transports', 'getConsole_Command_MessengerSetupTransportsService', true],
            'console.command.messenger_debug' => ['privates', 'console.command.messenger_debug', 'getConsole_Command_MessengerDebugService', true],
            'console.command.messenger_stop_workers' => ['privates', 'console.command.messenger_stop_workers', 'getConsole_Command_MessengerStopWorkersService', true],
            'console.command.router_debug' => ['privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService', true],
            'console.command.router_match' => ['privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService', true],
            'console.command.translation_debug' => ['privates', 'console.command.translation_debug', 'getConsole_Command_TranslationDebugService', true],
            'console.command.translation_extract' => ['privates', 'console.command.translation_extract', 'getConsole_Command_TranslationExtractService', true],
            'console.command.translation_pull' => ['privates', 'console.command.translation_pull', 'getConsole_Command_TranslationPullService', true],
            'console.command.translation_push' => ['privates', 'console.command.translation_push', 'getConsole_Command_TranslationPushService', true],
            'console.command.xliff_lint' => ['privates', 'console.command.xliff_lint', 'getConsole_Command_XliffLintService', true],
            'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService', true],
            'console.command.secrets_set' => ['privates', 'console.command.secrets_set', 'getConsole_Command_SecretsSetService', true],
            'console.command.secrets_remove' => ['privates', 'console.command.secrets_remove', 'getConsole_Command_SecretsRemoveService', true],
            'console.command.secrets_generate_key' => ['privates', 'console.command.secrets_generate_key', 'getConsole_Command_SecretsGenerateKeyService', true],
            'console.command.secrets_list' => ['privates', 'console.command.secrets_list', 'getConsole_Command_SecretsListService', true],
            'console.command.secrets_decrypt_to_local' => ['privates', 'console.command.secrets_decrypt_to_local', 'getConsole_Command_SecretsDecryptToLocalService', true],
            'console.command.secrets_encrypt_from_local' => ['privates', 'console.command.secrets_encrypt_from_local', 'getConsole_Command_SecretsEncryptFromLocalService', true],
            'cache.annotations' => ['privates', 'cache.annotations', 'getCache_AnnotationsService', false],
            'cache.messenger.restart_workers_signal' => ['privates', 'cache.messenger.restart_workers_signal', 'getCache_Messenger_RestartWorkersSignalService', true],
            'cache.default_marshaller' => ['privates', 'cache.default_marshaller', 'getCache_DefaultMarshallerService', true],
            'cache.default_clearer' => ['services', 'cache.app_clearer', 'getCache_AppClearerService', true],
            'identity_translator' => ['privates', 'identity_translator', 'getIdentityTranslatorService', true],
            'test.session.listener' => ['privates', 'test.session.listener', 'getTest_Session_ListenerService', false],
            'session.factory' => ['privates', 'session.factory', 'getSession_FactoryService', true],
            'session.storage.factory.mock_file' => ['privates', 'session.storage.factory.mock_file', 'getSession_Storage_Factory_MockFileService', true],
            'messenger.senders_locator' => ['privates', 'messenger.senders_locator', 'getMessenger_SendersLocatorService', true],
            'messenger.middleware.send_message' => ['privates', 'messenger.middleware.send_message', 'getMessenger_Middleware_SendMessageService', true],
            'serializer.normalizer.flatten_exception' => ['privates', 'serializer.normalizer.flatten_exception', 'getSerializer_Normalizer_FlattenExceptionService', true],
            'messenger.middleware.dispatch_after_current_bus' => ['privates', 'messenger.middleware.dispatch_after_current_bus', 'getMessenger_Middleware_DispatchAfterCurrentBusService', true],
            'messenger.middleware.reject_redelivered_message_middleware' => ['privates', 'messenger.middleware.reject_redelivered_message_middleware', 'getMessenger_Middleware_RejectRedeliveredMessageMiddlewareService', true],
            'messenger.middleware.failed_message_processing_middleware' => ['privates', 'messenger.middleware.failed_message_processing_middleware', 'getMessenger_Middleware_FailedMessageProcessingMiddlewareService', true],
            'messenger.receiver_locator' => ['privates', 'messenger.receiver_locator', 'getMessenger_ReceiverLocatorService', true],
            'messenger.retry_strategy_locator' => ['privates', 'messenger.retry_strategy_locator', 'getMessenger_RetryStrategyLocatorService', true],
            'messenger.retry.send_failed_message_for_retry_listener' => ['privates', 'messenger.retry.send_failed_message_for_retry_listener', 'getMessenger_Retry_SendFailedMessageForRetryListenerService', true],
            'messenger.failure.add_error_details_stamp_listener' => ['privates', 'messenger.failure.add_error_details_stamp_listener', 'getMessenger_Failure_AddErrorDetailsStampListenerService', true],
            'messenger.listener.stop_worker_on_restart_signal_listener' => ['privates', 'messenger.listener.stop_worker_on_restart_signal_listener', 'getMessenger_Listener_StopWorkerOnRestartSignalListenerService', true],
            'messenger.listener.stop_worker_on_stop_exception_listener' => ['privates', 'messenger.listener.stop_worker_on_stop_exception_listener', 'getMessenger_Listener_StopWorkerOnStopExceptionListenerService', true],
            'messenger.routable_message_bus' => ['privates', 'messenger.routable_message_bus', 'getMessenger_RoutableMessageBusService', true],
            'messenger.bus.command' => ['services', 'messenger.default_bus', 'getMessenger_DefaultBusService', true],
            'messenger.bus.query' => ['privates', 'messenger.bus.query', 'getMessenger_Bus_QueryService', true],
            'messenger.bus.event.async' => ['privates', 'messenger.bus.event.async', 'getMessenger_Bus_Event_AsyncService', true],
            'translator.default' => ['services', 'translator', 'getTranslatorService', true],
            'translator.formatter.default' => ['privates', 'translator.formatter.default', 'getTranslator_Formatter_DefaultService', true],
            'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService', true],
            'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService', true],
            'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService', true],
            'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService', true],
            'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService', true],
            'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService', true],
            'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService', true],
            'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService', true],
            'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService', true],
            'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService', true],
            'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService', true],
            'translation.dumper.php' => ['privates', 'translation.dumper.php', 'getTranslation_Dumper_PhpService', true],
            'translation.dumper.xliff' => ['privates', 'translation.dumper.xliff', 'getTranslation_Dumper_XliffService', true],
            'translation.dumper.po' => ['privates', 'translation.dumper.po', 'getTranslation_Dumper_PoService', true],
            'translation.dumper.mo' => ['privates', 'translation.dumper.mo', 'getTranslation_Dumper_MoService', true],
            'translation.dumper.yml' => ['privates', 'translation.dumper.yml', 'getTranslation_Dumper_YmlService', true],
            'translation.dumper.yaml' => ['privates', 'translation.dumper.yaml', 'getTranslation_Dumper_YamlService', true],
            'translation.dumper.qt' => ['privates', 'translation.dumper.qt', 'getTranslation_Dumper_QtService', true],
            'translation.dumper.csv' => ['privates', 'translation.dumper.csv', 'getTranslation_Dumper_CsvService', true],
            'translation.dumper.ini' => ['privates', 'translation.dumper.ini', 'getTranslation_Dumper_IniService', true],
            'translation.dumper.json' => ['privates', 'translation.dumper.json', 'getTranslation_Dumper_JsonService', true],
            'translation.dumper.res' => ['privates', 'translation.dumper.res', 'getTranslation_Dumper_ResService', true],
            'translation.extractor.php' => ['privates', 'translation.extractor.php', 'getTranslation_Extractor_PhpService', true],
            'translation.reader' => ['privates', 'translation.reader', 'getTranslation_ReaderService', true],
            'translation.extractor' => ['privates', 'translation.extractor', 'getTranslation_ExtractorService', true],
            'translation.writer' => ['privates', 'translation.writer', 'getTranslation_WriterService', true],
            'translation.warmer' => ['privates', 'translation.warmer', 'getTranslation_WarmerService', true],
            'translation.provider_collection' => ['privates', 'translation.provider_collection', 'getTranslation_ProviderCollectionService', true],
            'translation.provider_collection_factory' => ['privates', 'translation.provider_collection_factory', 'getTranslation_ProviderCollectionFactoryService', true],
            'translation.provider_factory.null' => ['privates', 'translation.provider_factory.null', 'getTranslation_ProviderFactory_NullService', true],
            'debug.debug_handlers_listener' => ['privates', 'debug.debug_handlers_listener', 'getDebug_DebugHandlersListenerService', false],
            'debug.file_link_formatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', true],
            'routing.resolver' => ['privates', 'routing.resolver', 'getRouting_ResolverService', true],
            'routing.loader.xml' => ['privates', 'routing.loader.xml', 'getRouting_Loader_XmlService', true],
            'routing.loader.yml' => ['privates', 'routing.loader.yml', 'getRouting_Loader_YmlService', true],
            'routing.loader.php' => ['privates', 'routing.loader.php', 'getRouting_Loader_PhpService', true],
            'routing.loader.glob' => ['privates', 'routing.loader.glob', 'getRouting_Loader_GlobService', true],
            'routing.loader.directory' => ['privates', 'routing.loader.directory', 'getRouting_Loader_DirectoryService', true],
            'routing.loader.container' => ['privates', 'routing.loader.container', 'getRouting_Loader_ContainerService', true],
            'router.default' => ['services', 'router', 'getRouterService', false],
            'router.request_context' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
            'router.cache_warmer' => ['privates', 'router.cache_warmer', 'getRouter_CacheWarmerService', true],
            'router_listener' => ['privates', 'router_listener', 'getRouterListenerService', false],
            'routing.loader.annotation' => ['privates', 'routing.loader.annotation', 'getRouting_Loader_AnnotationService', true],
            'routing.loader.annotation.directory' => ['privates', 'routing.loader.annotation.directory', 'getRouting_Loader_Annotation_DirectoryService', true],
            'routing.loader.annotation.file' => ['privates', 'routing.loader.annotation.file', 'getRouting_Loader_Annotation_FileService', true],
            'annotations.reader' => ['privates', 'annotations.reader', 'getAnnotations_ReaderService', true],
            'annotations.dummy_registry' => ['privates', 'annotations.dummy_registry', 'getAnnotations_DummyRegistryService', true],
            'annotations.cached_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', true],
            'annotations.cache_warmer' => ['privates', 'annotations.cache_warmer', 'getAnnotations_CacheWarmerService', true],
            'annotations.cache_adapter' => ['privates', 'annotations.cache_adapter', 'getAnnotations_CacheAdapterService', false],
            'secrets.vault' => ['privates', 'secrets.vault', 'getSecrets_VaultService', true],
            'secrets.decryption_key' => ['privates', 'secrets.decryption_key', 'getSecrets_DecryptionKeyService', true],
            'secrets.local_vault' => ['privates', 'secrets.local_vault', 'getSecrets_LocalVaultService', true],
            'serializer' => ['services', '.container.private.serializer', 'get_Container_Private_SerializerService', true],
            'serializer.normalizer.constraint_violation_list' => ['privates', 'serializer.normalizer.constraint_violation_list', 'getSerializer_Normalizer_ConstraintViolationListService', true],
            'serializer.normalizer.datetimezone' => ['privates', 'serializer.normalizer.datetimezone', 'getSerializer_Normalizer_DatetimezoneService', true],
            'serializer.normalizer.dateinterval' => ['privates', 'serializer.normalizer.dateinterval', 'getSerializer_Normalizer_DateintervalService', true],
            'serializer.normalizer.data_uri' => ['privates', 'serializer.normalizer.data_uri', 'getSerializer_Normalizer_DataUriService', true],
            'serializer.normalizer.datetime' => ['privates', 'serializer.normalizer.datetime', 'getSerializer_Normalizer_DatetimeService', true],
            'serializer.normalizer.json_serializable' => ['privates', 'serializer.normalizer.json_serializable', 'getSerializer_Normalizer_JsonSerializableService', true],
            'serializer.normalizer.problem' => ['privates', 'serializer.normalizer.problem', 'getSerializer_Normalizer_ProblemService', true],
            'serializer.normalizer.uid' => ['privates', 'serializer.normalizer.uid', 'getSerializer_Normalizer_UidService', true],
            'serializer.normalizer.form_error' => ['privates', 'serializer.normalizer.form_error', 'getSerializer_Normalizer_FormErrorService', true],
            'serializer.denormalizer.array' => ['privates', 'serializer.denormalizer.array', 'getSerializer_Denormalizer_ArrayService', true],
            'serializer.mapping.chain_loader' => ['privates', 'serializer.mapping.chain_loader', 'getSerializer_Mapping_ChainLoaderService', true],
            'serializer.mapping.class_metadata_factory' => ['privates', 'serializer.mapping.class_metadata_factory', 'getSerializer_Mapping_ClassMetadataFactoryService', true],
            'serializer.mapping.cache_warmer' => ['privates', 'serializer.mapping.cache_warmer', 'getSerializer_Mapping_CacheWarmerService', true],
            'serializer.encoder.xml' => ['privates', 'serializer.encoder.xml', 'getSerializer_Encoder_XmlService', true],
            'serializer.encoder.json' => ['privates', 'serializer.encoder.json', 'getSerializer_Encoder_JsonService', true],
            'serializer.encoder.yaml' => ['privates', 'serializer.encoder.yaml', 'getSerializer_Encoder_YamlService', true],
            'serializer.encoder.csv' => ['privates', 'serializer.encoder.csv', 'getSerializer_Encoder_CsvService', true],
            'serializer.name_converter.metadata_aware' => ['privates', 'serializer.name_converter.metadata_aware', 'getSerializer_NameConverter_MetadataAwareService', true],
            'error_handler.error_renderer.serializer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\ClearMetadataCacheDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\ClearMetadataCacheDoctrineODMCommand', 'getClearMetadataCacheDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\CreateSchemaDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\CreateSchemaDoctrineODMCommand', 'getCreateSchemaDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\DropSchemaDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\DropSchemaDoctrineODMCommand', 'getDropSchemaDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\GenerateHydratorsDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\GenerateHydratorsDoctrineODMCommand', 'getGenerateHydratorsDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\GenerateProxiesDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\GenerateProxiesDoctrineODMCommand', 'getGenerateProxiesDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\InfoDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\InfoDoctrineODMCommand', 'getInfoDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\LoadDataFixturesDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\LoadDataFixturesDoctrineODMCommand', 'getLoadDataFixturesDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\QueryDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\QueryDoctrineODMCommand', 'getQueryDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\ShardDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\ShardDoctrineODMCommand', 'getShardDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\TailCursorDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\TailCursorDoctrineODMCommand', 'getTailCursorDoctrineODMCommandService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\UpdateSchemaDoctrineODMCommand' => ['privates', 'Doctrine\\Bundle\\MongoDBBundle\\Command\\UpdateSchemaDoctrineODMCommand', 'getUpdateSchemaDoctrineODMCommandService', true],
            'doctrine_mongodb.odm.container_repository_factory' => ['privates', 'doctrine_mongodb.odm.container_repository_factory', 'getDoctrineMongodb_Odm_ContainerRepositoryFactoryService', true],
            'doctrine_mongodb.odm.stopwatch_command_logger' => ['privates', 'doctrine_mongodb.odm.stopwatch_command_logger', 'getDoctrineMongodb_Odm_StopwatchCommandLoggerService', true],
            'doctrine_mongodb.odm.psr_command_logger' => ['privates', 'doctrine_mongodb.odm.psr_command_logger', 'getDoctrineMongodb_Odm_PsrCommandLoggerService', true],
            'doctrine_mongodb.odm.data_collector.command_logger' => ['privates', 'doctrine_mongodb.odm.data_collector.command_logger', 'getDoctrineMongodb_Odm_DataCollector_CommandLoggerService', true],
            'doctrine_mongodb.odm.proxy_cache_warmer' => ['privates', 'doctrine_mongodb.odm.proxy_cache_warmer', 'getDoctrineMongodb_Odm_ProxyCacheWarmerService', true],
            'doctrine_mongodb.odm.hydrator_cache_warmer' => ['privates', 'doctrine_mongodb.odm.hydrator_cache_warmer', 'getDoctrineMongodb_Odm_HydratorCacheWarmerService', true],
            'doctrine_mongodb.odm.persistent_collection_cache_warmer' => ['privates', 'doctrine_mongodb.odm.persistent_collection_cache_warmer', 'getDoctrineMongodb_Odm_PersistentCollectionCacheWarmerService', true],
            'doctrine_mongodb.odm.symfony.fixtures.loader' => ['privates', 'doctrine_mongodb.odm.symfony.fixtures.loader', 'getDoctrineMongodb_Odm_Symfony_Fixtures_LoaderService', true],
            'doctrine_mongodb.odm.default_connection.event_manager' => ['privates', 'doctrine_mongodb.odm.default_connection.event_manager', 'getDoctrineMongodb_Odm_DefaultConnection_EventManagerService', true],
            'doctrine_mongodb.odm.default_configuration' => ['privates', 'doctrine_mongodb.odm.default_configuration', 'getDoctrineMongodb_Odm_DefaultConfigurationService', true],
            'doctrine_mongodb.odm.default_annotation_metadata_driver' => ['privates', 'doctrine_mongodb.odm.default_annotation_metadata_driver', 'getDoctrineMongodb_Odm_DefaultAnnotationMetadataDriverService', true],
            'doctrine_mongodb.odm.default_metadata_driver' => ['privates', 'doctrine_mongodb.odm.default_metadata_driver', 'getDoctrineMongodb_Odm_DefaultMetadataDriverService', true],
            'doctrine_mongodb.odm.default_metadata_cache' => ['privates', 'doctrine_mongodb.odm.default_metadata_cache', 'getDoctrineMongodb_Odm_DefaultMetadataCacheService', true],
            'doctrine_mongodb.odm.default_manager_configurator' => ['privates', 'doctrine_mongodb.odm.default_manager_configurator', 'getDoctrineMongodb_Odm_DefaultManagerConfiguratorService', true],
            'doctrine_mongodb.messenger.event_subscriber.doctrine_clear_document_manager' => ['privates', 'doctrine_mongodb.messenger.event_subscriber.doctrine_clear_document_manager', 'getDoctrineMongodb_Messenger_EventSubscriber_DoctrineClearDocumentManagerService', true],
            'broadway.command_handling.simple_command_bus' => ['services', 'broadway.command_handling.command_bus', 'getBroadway_CommandHandling_CommandBusService', true],
            'broadway.uuid.converter' => ['privates', 'broadway.uuid.converter', 'getBroadway_Uuid_ConverterService', true],
            'broadway.metadata_enricher.console' => ['privates', 'broadway.metadata_enricher.console', 'getBroadway_MetadataEnricher_ConsoleService', true],
            'broadway.read_model.in_memory.repository_factory' => ['services', 'broadway.read_model.repository_factory', 'getBroadway_ReadModel_RepositoryFactoryService', true],
            'broadway.simple_interface_serializer' => ['services', 'broadway.serializer.metadata', 'getBroadway_Serializer_MetadataService', true],
            'messenger.bus.command.middleware.handle_message' => ['privates', 'messenger.bus.command.middleware.handle_message', 'getMessenger_Bus_Command_Middleware_HandleMessageService', true],
            'messenger.bus.query.middleware.handle_message' => ['privates', 'messenger.bus.query.middleware.handle_message', 'getMessenger_Bus_Query_Middleware_HandleMessageService', true],
            'messenger.bus.event.async.middleware.add_bus_name_stamp_middleware' => ['privates', 'messenger.bus.event.async.middleware.add_bus_name_stamp_middleware', 'getMessenger_Bus_Event_Async_Middleware_AddBusNameStampMiddlewareService', true],
            'messenger.bus.event.async.middleware.handle_message' => ['privates', 'messenger.bus.event.async.middleware.handle_message', 'getMessenger_Bus_Event_Async_Middleware_HandleMessageService', true],
            'messenger.bus.command.messenger.handlers_locator' => ['privates', 'messenger.bus.command.messenger.handlers_locator', 'getMessenger_Bus_Command_Messenger_HandlersLocatorService', true],
            'messenger.bus.query.messenger.handlers_locator' => ['privates', 'messenger.bus.query.messenger.handlers_locator', 'getMessenger_Bus_Query_Messenger_HandlersLocatorService', true],
            'messenger.bus.event.async.messenger.handlers_locator' => ['privates', 'messenger.bus.event.async.messenger.handlers_locator', 'getMessenger_Bus_Event_Async_Messenger_HandlersLocatorService', true],
            'logger' => ['privates', 'logger', 'getLoggerService', false],
            'Psr\\Container\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService', true],
            'Symfony\\Component\\DependencyInjection\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService', true],
            'App\\ReturnOrder\\Domain\\Repository\\ReturnOrderRepository' => ['privates', 'App\\ReturnOrder\\Infrastructure\\Persistence\\Repository\\MongoReturnOrderRepository', 'getMongoReturnOrderRepositoryService', true],
            'App\\Shared\\Application\\Command\\CommandBusInterface' => ['privates', 'App\\Shared\\Infrastructure\\Bus\\Command\\MessengerCommandBus', 'getMessengerCommandBusService', true],
            'App\\Shared\\Application\\Command\\CommandHandlerInterface' => ['services', 'App\\ReturnOrder\\Application\\Command\\Create\\CreateReturnOrderHandler', 'getCreateReturnOrderHandlerService', true],
            'App\\Shared\\Application\\Query\\QueryBusInterface' => ['privates', 'App\\Shared\\Infrastructure\\Bus\\Query\\MessengerQueryBus', 'getMessengerQueryBusService', true],
            'App\\Shared\\Application\\Query\\QueryHandlerInterface' => ['services', 'App\\ReturnOrder\\Application\\Query\\PickupRequest\\PickupRequestHandler', 'getPickupRequestHandlerService', true],
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'Symfony\\Component\\HttpFoundation\\RequestStack' => ['services', 'request_stack', 'getRequestStackService', false],
            'Symfony\\Component\\HttpKernel\\KernelInterface' => ['services', 'kernel', 'getKernelService', true],
            'Symfony\\Component\\Filesystem\\Filesystem' => ['services', '.container.private.filesystem', 'get_Container_Private_FilesystemService', true],
            'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => ['privates', 'file_locator', 'getFileLocatorService', true],
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => ['privates', 'slugger', 'getSluggerService', true],
            'error_renderer.html' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'error_renderer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'Psr\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Psr\\Container\\ContainerInterface $parameterBag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Psr\\Cache\\CacheItemPoolInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Contracts\\Cache\\CacheInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Contracts\\Translation\\TranslatorInterface' => ['services', 'translator', 'getTranslatorService', true],
            'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => ['services', '.container.private.session', 'get_Container_Private_SessionService', true],
            'session.storage.factory' => ['privates', 'session.storage.factory.mock_file', 'getSession_Storage_Factory_MockFileService', true],
            'session_listener' => ['privates', 'test.session.listener', 'getTest_Session_ListenerService', false],
            'Symfony\\Component\\Messenger\\MessageBusInterface' => ['services', 'messenger.default_bus', 'getMessenger_DefaultBusService', true],
            'Symfony\\Component\\Messenger\\MessageBusInterface $messengerBusQuery' => ['privates', 'messenger.bus.query', 'getMessenger_Bus_QueryService', true],
            'Symfony\\Component\\Messenger\\MessageBusInterface $messengerBusEventAsync' => ['privates', 'messenger.bus.event.async', 'getMessenger_Bus_Event_AsyncService', true],
            'Symfony\\Component\\Translation\\Reader\\TranslationReaderInterface' => ['privates', 'translation.reader', 'getTranslation_ReaderService', true],
            'Symfony\\Component\\Translation\\Extractor\\ExtractorInterface' => ['privates', 'translation.extractor', 'getTranslation_ExtractorService', true],
            'Symfony\\Component\\Translation\\Writer\\TranslationWriterInterface' => ['privates', 'translation.writer', 'getTranslation_WriterService', true],
            'translator.formatter' => ['privates', 'translator.formatter.default', 'getTranslator_Formatter_DefaultService', true],
            'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', true],
            'Symfony\\Component\\Routing\\RouterInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\RequestContextAwareInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\RequestContext' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
            'annotation_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', true],
            'Doctrine\\Common\\Annotations\\Reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', true],
            'Symfony\\Component\\Serializer\\SerializerInterface' => ['services', '.container.private.serializer', 'get_Container_Private_SerializerService', true],
            'Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface' => ['services', '.container.private.serializer', 'get_Container_Private_SerializerService', true],
            'Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface' => ['services', '.container.private.serializer', 'get_Container_Private_SerializerService', true],
            'Symfony\\Component\\Serializer\\Encoder\\EncoderInterface' => ['services', '.container.private.serializer', 'get_Container_Private_SerializerService', true],
            'Symfony\\Component\\Serializer\\Encoder\\DecoderInterface' => ['services', '.container.private.serializer', 'get_Container_Private_SerializerService', true],
            'Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface' => ['privates', 'serializer.mapping.class_metadata_factory', 'getSerializer_Mapping_ClassMetadataFactoryService', true],
            'error_renderer.serializer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'Doctrine\\ODM\\MongoDB\\DocumentManager' => ['services', 'doctrine_mongodb.odm.default_document_manager', 'getDoctrineMongodb_Odm_DefaultDocumentManagerService', true],
            'Doctrine\\Bundle\\MongoDBBundle\\ManagerRegistry' => ['services', 'doctrine_mongodb', 'getDoctrineMongodbService', true],
            'doctrine_mongodb.odm.metadata.annotation_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', true],
            'doctrine_mongodb.odm.command_logger' => ['privates', 'doctrine_mongodb.odm.psr_command_logger', 'getDoctrineMongodb_Odm_PsrCommandLoggerService', true],
            'doctrine_mongodb.odm.event_manager' => ['privates', 'doctrine_mongodb.odm.default_connection.event_manager', 'getDoctrineMongodb_Odm_DefaultConnection_EventManagerService', true],
            'Symfony\\Component\\DependencyInjection\\ContainerInterface $driverContainer' => ['services', 'behat.driver.service_container', 'getBehat_Driver_ServiceContainerService', true],
            'argument_resolver.controller_locator' => ['privates', '.service_locator.0ZRsAiG', 'get_ServiceLocator_0ZRsAiGService', true],
            'Psr\\Log\\LoggerInterface' => ['privates', 'logger', 'getLoggerService', false],
        ], [
            'App\\ReturnOrder\\Domain\\Strategy\\CarrierReturnCodeStrategy' => '?',
            'App\\ReturnOrder\\Infrastructure\\Persistence\\Repository\\MongoReturnOrderRepository' => '?',
            'App\\Shared\\Infrastructure\\Bus\\Command\\MessengerCommandBus' => '?',
            'App\\Shared\\Infrastructure\\Bus\\Query\\MessengerQueryBus' => '?',
            'App\\Shared\\Infrastructure\\Symfony\\Exception\\ApiExceptionListener' => '?',
            'App\\Tests\\Functional\\Contexts\\FixturesLoader' => '?',
            'controller_resolver' => '?',
            'argument_metadata_factory' => '?',
            'argument_resolver' => '?',
            'argument_resolver.request_attribute' => '?',
            'argument_resolver.request' => '?',
            'argument_resolver.session' => '?',
            'argument_resolver.service' => '?',
            'argument_resolver.default' => '?',
            'argument_resolver.variadic' => '?',
            'response_listener' => '?',
            'streamed_response_listener' => '?',
            'locale_listener' => '?',
            'validate_request_listener' => '?',
            'disallow_search_engine_index_response_listener' => '?',
            'exception_listener' => '?',
            'parameter_bag' => '?',
            'cache_clearer' => '?',
            'filesystem' => '?',
            'file_locator' => '?',
            'config_cache_factory' => '?',
            'dependency_injection.config.container_parameters_resource_checker' => '?',
            'config.resource.self_checking_resource_checker' => '?',
            'locale_aware_listener' => '?',
            'container.env_var_processor' => '?',
            'slugger' => '?',
            'container.getenv' => '?',
            'config_builder.warmer' => '?',
            'error_handler.error_renderer.html' => '?',
            'console.error_listener' => '?',
            'console.suggest_missing_package_subscriber' => '?',
            'console.command.about' => '?',
            'console.command.assets_install' => '?',
            'console.command.cache_clear' => '?',
            'console.command.cache_pool_clear' => '?',
            'console.command.cache_pool_prune' => '?',
            'console.command.cache_pool_delete' => '?',
            'console.command.cache_pool_list' => '?',
            'console.command.cache_warmup' => '?',
            'console.command.config_debug' => '?',
            'console.command.config_dump_reference' => '?',
            'console.command.container_debug' => '?',
            'console.command.container_lint' => '?',
            'console.command.debug_autowiring' => '?',
            'console.command.dotenv_debug' => '?',
            'console.command.event_dispatcher_debug' => '?',
            'console.command.messenger_consume_messages' => '?',
            'console.command.messenger_setup_transports' => '?',
            'console.command.messenger_debug' => '?',
            'console.command.messenger_stop_workers' => '?',
            'console.command.router_debug' => '?',
            'console.command.router_match' => '?',
            'console.command.translation_debug' => '?',
            'console.command.translation_extract' => '?',
            'console.command.translation_pull' => '?',
            'console.command.translation_push' => '?',
            'console.command.xliff_lint' => '?',
            'console.command.yaml_lint' => '?',
            'console.command.secrets_set' => '?',
            'console.command.secrets_remove' => '?',
            'console.command.secrets_generate_key' => '?',
            'console.command.secrets_list' => '?',
            'console.command.secrets_decrypt_to_local' => '?',
            'console.command.secrets_encrypt_from_local' => '?',
            'cache.annotations' => '?',
            'cache.messenger.restart_workers_signal' => '?',
            'cache.default_marshaller' => '?',
            'cache.default_clearer' => '?',
            'identity_translator' => '?',
            'test.session.listener' => '?',
            'session.factory' => '?',
            'session.storage.factory.mock_file' => '?',
            'messenger.senders_locator' => '?',
            'messenger.middleware.send_message' => '?',
            'serializer.normalizer.flatten_exception' => '?',
            'messenger.middleware.dispatch_after_current_bus' => '?',
            'messenger.middleware.reject_redelivered_message_middleware' => '?',
            'messenger.middleware.failed_message_processing_middleware' => '?',
            'messenger.receiver_locator' => '?',
            'messenger.retry_strategy_locator' => '?',
            'messenger.retry.send_failed_message_for_retry_listener' => '?',
            'messenger.failure.add_error_details_stamp_listener' => '?',
            'messenger.listener.stop_worker_on_restart_signal_listener' => '?',
            'messenger.listener.stop_worker_on_stop_exception_listener' => '?',
            'messenger.routable_message_bus' => '?',
            'messenger.bus.command' => '?',
            'messenger.bus.query' => '?',
            'messenger.bus.event.async' => '?',
            'translator.default' => '?',
            'translator.formatter.default' => '?',
            'translation.loader.php' => '?',
            'translation.loader.yml' => '?',
            'translation.loader.xliff' => '?',
            'translation.loader.po' => '?',
            'translation.loader.mo' => '?',
            'translation.loader.qt' => '?',
            'translation.loader.csv' => '?',
            'translation.loader.res' => '?',
            'translation.loader.dat' => '?',
            'translation.loader.ini' => '?',
            'translation.loader.json' => '?',
            'translation.dumper.php' => '?',
            'translation.dumper.xliff' => '?',
            'translation.dumper.po' => '?',
            'translation.dumper.mo' => '?',
            'translation.dumper.yml' => '?',
            'translation.dumper.yaml' => '?',
            'translation.dumper.qt' => '?',
            'translation.dumper.csv' => '?',
            'translation.dumper.ini' => '?',
            'translation.dumper.json' => '?',
            'translation.dumper.res' => '?',
            'translation.extractor.php' => '?',
            'translation.reader' => '?',
            'translation.extractor' => '?',
            'translation.writer' => '?',
            'translation.warmer' => '?',
            'translation.provider_collection' => '?',
            'translation.provider_collection_factory' => '?',
            'translation.provider_factory.null' => '?',
            'debug.debug_handlers_listener' => '?',
            'debug.file_link_formatter' => '?',
            'routing.resolver' => '?',
            'routing.loader.xml' => '?',
            'routing.loader.yml' => '?',
            'routing.loader.php' => '?',
            'routing.loader.glob' => '?',
            'routing.loader.directory' => '?',
            'routing.loader.container' => '?',
            'router.default' => '?',
            'router.request_context' => '?',
            'router.cache_warmer' => '?',
            'router_listener' => '?',
            'routing.loader.annotation' => '?',
            'routing.loader.annotation.directory' => '?',
            'routing.loader.annotation.file' => '?',
            'annotations.reader' => '?',
            'annotations.dummy_registry' => '?',
            'annotations.cached_reader' => '?',
            'annotations.cache_warmer' => '?',
            'annotations.cache_adapter' => '?',
            'secrets.vault' => '?',
            'secrets.decryption_key' => '?',
            'secrets.local_vault' => '?',
            'serializer' => '?',
            'serializer.normalizer.constraint_violation_list' => '?',
            'serializer.normalizer.datetimezone' => '?',
            'serializer.normalizer.dateinterval' => '?',
            'serializer.normalizer.data_uri' => '?',
            'serializer.normalizer.datetime' => '?',
            'serializer.normalizer.json_serializable' => '?',
            'serializer.normalizer.problem' => '?',
            'serializer.normalizer.uid' => '?',
            'serializer.normalizer.form_error' => '?',
            'serializer.denormalizer.array' => '?',
            'serializer.mapping.chain_loader' => '?',
            'serializer.mapping.class_metadata_factory' => '?',
            'serializer.mapping.cache_warmer' => '?',
            'serializer.encoder.xml' => '?',
            'serializer.encoder.json' => '?',
            'serializer.encoder.yaml' => '?',
            'serializer.encoder.csv' => '?',
            'serializer.name_converter.metadata_aware' => '?',
            'error_handler.error_renderer.serializer' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\ClearMetadataCacheDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\CreateSchemaDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\DropSchemaDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\GenerateHydratorsDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\GenerateProxiesDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\InfoDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\LoadDataFixturesDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\QueryDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\ShardDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\TailCursorDoctrineODMCommand' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\Command\\UpdateSchemaDoctrineODMCommand' => '?',
            'doctrine_mongodb.odm.container_repository_factory' => '?',
            'doctrine_mongodb.odm.stopwatch_command_logger' => '?',
            'doctrine_mongodb.odm.psr_command_logger' => '?',
            'doctrine_mongodb.odm.data_collector.command_logger' => '?',
            'doctrine_mongodb.odm.proxy_cache_warmer' => '?',
            'doctrine_mongodb.odm.hydrator_cache_warmer' => '?',
            'doctrine_mongodb.odm.persistent_collection_cache_warmer' => '?',
            'doctrine_mongodb.odm.symfony.fixtures.loader' => '?',
            'doctrine_mongodb.odm.default_connection.event_manager' => '?',
            'doctrine_mongodb.odm.default_configuration' => '?',
            'doctrine_mongodb.odm.default_annotation_metadata_driver' => '?',
            'doctrine_mongodb.odm.default_metadata_driver' => '?',
            'doctrine_mongodb.odm.default_metadata_cache' => '?',
            'doctrine_mongodb.odm.default_manager_configurator' => '?',
            'doctrine_mongodb.messenger.event_subscriber.doctrine_clear_document_manager' => '?',
            'broadway.command_handling.simple_command_bus' => '?',
            'broadway.uuid.converter' => '?',
            'broadway.metadata_enricher.console' => '?',
            'broadway.read_model.in_memory.repository_factory' => '?',
            'broadway.simple_interface_serializer' => '?',
            'messenger.bus.command.middleware.handle_message' => '?',
            'messenger.bus.query.middleware.handle_message' => '?',
            'messenger.bus.event.async.middleware.add_bus_name_stamp_middleware' => '?',
            'messenger.bus.event.async.middleware.handle_message' => '?',
            'messenger.bus.command.messenger.handlers_locator' => '?',
            'messenger.bus.query.messenger.handlers_locator' => '?',
            'messenger.bus.event.async.messenger.handlers_locator' => '?',
            'logger' => '?',
            'Psr\\Container\\ContainerInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ContainerInterface' => '?',
            'App\\ReturnOrder\\Domain\\Repository\\ReturnOrderRepository' => '?',
            'App\\Shared\\Application\\Command\\CommandBusInterface' => '?',
            'App\\Shared\\Application\\Command\\CommandHandlerInterface' => '?',
            'App\\Shared\\Application\\Query\\QueryBusInterface' => '?',
            'App\\Shared\\Application\\Query\\QueryHandlerInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => '?',
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => '?',
            'Symfony\\Component\\HttpFoundation\\RequestStack' => '?',
            'Symfony\\Component\\HttpKernel\\KernelInterface' => '?',
            'Symfony\\Component\\Filesystem\\Filesystem' => '?',
            'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => '?',
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => '?',
            'error_renderer.html' => '?',
            'error_renderer' => '?',
            'Psr\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Psr\\Container\\ContainerInterface $parameterBag' => '?',
            'Psr\\Cache\\CacheItemPoolInterface' => '?',
            'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => '?',
            'Symfony\\Contracts\\Cache\\CacheInterface' => '?',
            'Symfony\\Contracts\\Translation\\TranslatorInterface' => '?',
            'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => '?',
            'session.storage.factory' => '?',
            'session_listener' => '?',
            'Symfony\\Component\\Messenger\\MessageBusInterface' => '?',
            'Symfony\\Component\\Messenger\\MessageBusInterface $messengerBusQuery' => '?',
            'Symfony\\Component\\Messenger\\MessageBusInterface $messengerBusEventAsync' => '?',
            'Symfony\\Component\\Translation\\Reader\\TranslationReaderInterface' => '?',
            'Symfony\\Component\\Translation\\Extractor\\ExtractorInterface' => '?',
            'Symfony\\Component\\Translation\\Writer\\TranslationWriterInterface' => '?',
            'translator.formatter' => '?',
            'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => '?',
            'Symfony\\Component\\Routing\\RouterInterface' => '?',
            'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => '?',
            'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => '?',
            'Symfony\\Component\\Routing\\RequestContextAwareInterface' => '?',
            'Symfony\\Component\\Routing\\RequestContext' => '?',
            'annotation_reader' => '?',
            'Doctrine\\Common\\Annotations\\Reader' => '?',
            'Symfony\\Component\\Serializer\\SerializerInterface' => '?',
            'Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface' => '?',
            'Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface' => '?',
            'Symfony\\Component\\Serializer\\Encoder\\EncoderInterface' => '?',
            'Symfony\\Component\\Serializer\\Encoder\\DecoderInterface' => '?',
            'Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface' => '?',
            'error_renderer.serializer' => '?',
            'Doctrine\\ODM\\MongoDB\\DocumentManager' => '?',
            'Doctrine\\Bundle\\MongoDBBundle\\ManagerRegistry' => '?',
            'doctrine_mongodb.odm.metadata.annotation_reader' => '?',
            'doctrine_mongodb.odm.command_logger' => '?',
            'doctrine_mongodb.odm.event_manager' => '?',
            'Symfony\\Component\\DependencyInjection\\ContainerInterface $driverContainer' => '?',
            'argument_resolver.controller_locator' => '?',
            'Psr\\Log\\LoggerInterface' => '?',
        ]);
    }
}
